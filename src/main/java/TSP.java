import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;

import static java.nio.file.StandardOpenOption.APPEND;
import static java.nio.file.StandardOpenOption.CREATE;

/**
 * An abstract class, which is extended by SIM and SOPH
 * Both SIM and SOPH implement the abstract method findMinTSP()
 * After finding the result, SIM and SOPH can call outputResult() method in this class to save results in a file
 */
public abstract class TSP {
    int n;
    String costFunction;
    int MEB;
    int steps = 0;
    int seed;
    String strategy;

    /**
     * Find and return the tour with minimum cost in this TSP problem
     * @return
     */
    public abstract Tour findMinTSP();

    /**
     * Save the result of TSP to a file at path
     * @param path
     * @param tour
     * @param timeCost
     */
    public void outputResult(Path path, Tour tour, long timeCost){
        ArrayList<String> lines = new ArrayList<>();
        StringBuilder builder = new StringBuilder();
        builder.append("TSP of " + n + " nodes with cost function " + costFunction + " Generated By " + strategy);
        if (strategy.equals("SOPH")){
            builder.append(" Using seed " + seed);
        }
        builder.append(" : ");
        lines.add(builder.toString());

        lines.add(tour.toString());
        lines.add("Steps: " + steps);
        lines.add("Time Cost: " + timeCost + " ms");
        lines.add("");

        try{
            Files.write(path, lines, CREATE, APPEND);
        }catch (IOException ex){
            ex.printStackTrace();
        }
    }
}
